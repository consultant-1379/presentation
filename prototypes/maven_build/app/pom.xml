<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ericsson.nms</groupId>
    <artifactId>integration</artifactId>
    <version>13.2.0.44</version>
  </parent>

  <groupId>com.ericsson.nms</groupId>
  <artifactId>app</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <node.executable>node</node.executable>
    <phantom.executable>phantomjs</phantom.executable>
    <jscoverage.executable>jscoverage</jscoverage.executable>
    <webapp.dir>${project.build.directory}/webapp</webapp.dir>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>get-nodejs-and-phantomjs</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.ericsson.org.nodejs</groupId>
                  <artifactId>nodejs</artifactId>
                  <version>0.8.7</version>
                  <type>tar.gz</type>
                  <!-- classifier> [classifier - optional] </classifier -->
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/nodejs</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.ericsson.org.phantomjs</groupId>
                  <artifactId>phantomjs</artifactId>
                  <version>1.6.1</version>
                  <type>tar.gz</type>
                  <!-- classifier> [classifier - optional] </classifier -->
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/phantomjs</outputDirectory>
                </artifactItem>
              </artifactItems>
              <!-- other configurations here -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
	<executions>
	  <execution>
	    <id>copy-stuff-to-target</id>
	    <phase>generate-sources</phase>
	    <goals>
	      <goal>copy-resources</goal>
	    </goals>
	    <configuration>
	      <outputDirectory>${project.build.directory}/webapp</outputDirectory>
	      <includeEmptyDirs>true</includeEmptyDirs>
	      <resources>
		<resource>
		  <directory>src/main/webapp</directory>
		  <filtering>false</filtering>
		</resource>
		<resource>
		  <directory>src/main/webapp/config</directory>
		  <filtering>true</filtering>
		  <includes>
		    <include>package.json</include>
		  </includes>
		</resource>	
		<resource>
		  <directory>src/main/</directory>
		  <filtering>true</filtering>
		  <includes>
		    <include>assembly/package.json</include>
		  </includes>
		</resource>			
	      </resources>
	    </configuration>
	  </execution>
	  <execution>
	    <id>prepare-resources-for-phantomjs-test</id>
	    <phase>generate-test-resources</phase>
	    <goals>
	      <goal>copy-resources</goal>
	    </goals>
	    <configuration>
	      <outputDirectory>${project.build.directory}/webapp/build/unit</outputDirectory>
	      <includeEmptyDirs>true</includeEmptyDirs>
	      <resources>
		<resource>
		  <directory>target/webapp</directory>
		  <filtering>true</filtering>
		  <includes>
		    <include>test/*</include>
		    <include>test/application/*</include>
		    <include>node_modules/titan/ext/mock/*</include>
		    <include>node_modules/titan/js/*</include>
		    <include>node_modules/titan/lib/jasmine/*</include>
		    <include>node_modules/titan/lib/jasmine/jasmine-1.2.0/*</include>
		    <include>node_modules/titan/lib/requirejs/*</include>
		  </includes>							
		</resource>	
		
	      </resources>
	    </configuration>
	  </execution>
	</executions>
      </plugin>	  
      
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>exec-maven-plugin</artifactId>
	<version>1.2.1</version>
	<executions>
          <execution>
	    <id>node_resolve_nexus_links</id>  
	    <phase>compile</phase>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <configuration>
	      <executable>${project.build.directory}/nodejs/bin/${node.executable}</executable>
	      <workingDirectory>${webapp.dir}</workingDirectory>
	      <arguments>
		<argument>${webapp.dir}/config/node_script.js</argument>
	      </arguments>
	    </configuration>
          </execution>	
          <execution>
	    <id>npm-install-dependencies</id>  
	    <phase>compile</phase>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <configuration>
	      <executable>${project.build.directory}/nodejs/bin/${node.executable}</executable>
	      <workingDirectory>${webapp.dir}</workingDirectory>
	      <arguments>
		<argument>${project.build.directory}/nodejs/lib/node_modules/npm/bin/npm-cli.js</argument>
		<argument>install</argument>
	      </arguments>
	    </configuration>
          </execution>
	  <execution>
	    <id>r.js-optimisation</id>
	    <phase>compile</phase>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <configuration>
	      <executable>${project.build.directory}/nodejs/bin/${node.executable}</executable>
	      <workingDirectory>${webapp.dir}</workingDirectory>
	      <arguments>
		<argument>${webapp.dir}/node_modules/titan/node_modules/requirejs/bin/r.js</argument>
		<argument>-o</argument>
		<argument>${webapp.dir}/config/app.build.js</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <execution>
	    <id>jsCoverage_src_build_test</id>
	    <phase>test</phase>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <configuration>
	      <executable>${webapp.dir}/node_modules/titan/tools/jscoverage/${jscoverage.executable}</executable>
	      <workingDirectory>${webapp.dir}</workingDirectory>
	      <arguments>
		<argument>src</argument>
		<argument>build/unit/src</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <execution>
	    <id>phantomjs</id>
	    <phase>test</phase>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <configuration>
	      <executable>${project.build.directory}/phantomjs/bin/${phantom.executable}</executable>
	      <workingDirectory>${webapp.dir}</workingDirectory>
	      <arguments>
		<argument>node_modules/titan/lib/jasmine/test-runner.js</argument>
		<argument>--dir</argument>
		<argument>build/reports</argument>
		<argument>--test</argument>
		<argument>build/unit/test/index.html</argument>
	      </arguments>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<artifactId>maven-assembly-plugin</artifactId>
	<version>2.3</version>
	<configuration>
	  <descriptors>
	    <descriptor>src/main/assembly/assembly.xml</descriptor>
	  </descriptors>
	  <appendAssemblyId>false</appendAssemblyId>
	  <archiveBaseDirectory>${project.build.directory}</archiveBaseDirectory>
	</configuration>
	<executions>
	  <execution>
	    <phase>package</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
  </reporting>
  
  <profiles>
    <profile>
      <id>rpmbuild</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <node.executable>node.exe</node.executable>
	<phantom.executable>phantomjs.exe</phantom.executable>
	<jscoverage.executable>jscoverage.exe</jscoverage.executable>
      </properties>
    </profile>
  </profiles>
</project>
