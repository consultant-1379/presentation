{
    "project": {
        "name": "Titan",
        "description": "Ericsson TOR web application development framework.",
        "version": "0.0.7"
    },
    "files": {
        "ext\\mock\\mock.js": {
            "name": "ext\\mock\\mock.js",
            "modules": {
                "Mock": 1
            },
            "classes": {
                "Titan.mock": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\Application.js": {
            "name": "src\\Titan\\Application.js",
            "modules": {},
            "classes": {
                "Titan.Application": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\Backbone.History.fix.js": {
            "name": "src\\Titan\\Backbone.History.fix.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\Collection.js": {
            "name": "src\\Titan\\Collection.js",
            "modules": {},
            "classes": {
                "Titan.Collection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\Element.js": {
            "name": "src\\Titan\\Element.js",
            "modules": {},
            "classes": {
                "Titan.Element": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\EventBus.js": {
            "name": "src\\Titan\\EventBus.js",
            "modules": {},
            "classes": {
                "Titan.EventBus": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\MainController.js": {
            "name": "src\\Titan\\MainController.js",
            "modules": {},
            "classes": {
                "Titan.MainController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\Model.js": {
            "name": "src\\Titan\\Model.js",
            "modules": {},
            "classes": {
                "Titan.Model": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\Place.js": {
            "name": "src\\Titan\\Place.js",
            "modules": {},
            "classes": {
                "Titan.Place": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\Presenter.js": {
            "name": "src\\Titan\\Presenter.js",
            "modules": {},
            "classes": {
                "Titan.Presenter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\Router.js": {
            "name": "src\\Titan\\Router.js",
            "modules": {},
            "classes": {
                "Titan.Router": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\View.js": {
            "name": "src\\Titan\\View.js",
            "modules": {},
            "classes": {
                "Titan.View": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\core.js": {
            "name": "src\\Titan\\core.js",
            "modules": {
                "Titan": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\globals.js": {
            "name": "src\\Titan\\globals.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\Titan\\utils.js": {
            "name": "src\\Titan\\utils.js",
            "modules": {},
            "classes": {
                "Titan.utils": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Mock": {
            "name": "Mock",
            "submodules": {},
            "classes": {
                "Titan.mock": 1,
                "Titan.Application": 1,
                "Titan.Collection": 1,
                "Titan.Element": 1,
                "Titan.EventBus": 1,
                "Titan.MainController": 1,
                "Titan.Model": 1,
                "Titan.Place": 1,
                "Titan.Presenter": 1,
                "Titan.Router": 1,
                "Titan.View": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\Titan\\View.js",
            "line": 1,
            "description": "Titan extension for testing models"
        },
        "Titan": {
            "name": "Titan",
            "submodules": {},
            "classes": {
                "Titan.utils": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\Titan\\utils.js",
            "line": 1,
            "description": "The overall object exposed to require/almond. Contains all public objects within it."
        }
    },
    "classes": {
        "Titan.mock": {
            "name": "Titan.mock",
            "shortname": "Titan.mock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "ext\\mock\\mock.js",
            "line": 138,
            "description": "Titan extension for testing models"
        },
        "Titan.Application": {
            "name": "Titan.Application",
            "shortname": "Titan.Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\Application.js",
            "line": 1,
            "description": "Encapsulates the entire Application. Eliminates the need to manually create an Element, Router and\nMainController, and begin tracking of the hash value on the router. Triggers the initialisation of the whole app.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Titan.Collection": {
            "name": "Titan.Collection",
            "shortname": "Titan.Collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\Collection.js",
            "line": 1,
            "description": "Extends Backbone.Collection\nSee: [http://backbonejs.org/#Collection](http://backbonejs.org/#Collection)"
        },
        "Titan.Element": {
            "name": "Titan.Element",
            "shortname": "Titan.Element",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\Element.js",
            "line": 1,
            "description": "Provides utility functions for dealing with adding of Widgets to containers",
            "params": [
                {
                    "name": "selector",
                    "description": "The CSS selector for the element(s) to be used as container(s)",
                    "type": "String"
                }
            ],
            "is_constructor": 1
        },
        "Titan.EventBus": {
            "name": "Titan.EventBus",
            "shortname": "Titan.EventBus",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\EventBus.js",
            "line": 1,
            "description": "Extends Backbone.Events.\nSee: [http://backbonejs.org/#Events](http://backbonejs.org/#Events)",
            "is_constructor": 1
        },
        "Titan.MainController": {
            "name": "Titan.MainController",
            "shortname": "Titan.MainController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\MainController.js",
            "line": 1,
            "description": "Binds the changes in Place to a method to handle the change using options.eventBus.\nThrows error if options does not contain eventBus and container.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Titan.Model": {
            "name": "Titan.Model",
            "shortname": "Titan.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\Model.js",
            "line": 1,
            "description": "Extends Backbone.Model\nSee: [http://backbonejs.org/#Model](http://backbonejs.org/#Model)"
        },
        "Titan.Place": {
            "name": "Titan.Place",
            "shortname": "Titan.Place",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\Place.js",
            "line": 1,
            "description": "Maps a function from a Presenter to the corresponding URI.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Array"
                }
            ]
        },
        "Titan.Presenter": {
            "name": "Titan.Presenter",
            "shortname": "Titan.Presenter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\Presenter.js",
            "line": 1,
            "description": "Connects the Model to the View",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "An option JavaScript object containing the EventBus and View",
                    "type": "Object"
                }
            ]
        },
        "Titan.Router": {
            "name": "Titan.Router",
            "shortname": "Titan.Router",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\Router.js",
            "line": 1,
            "description": "Creates a new Backbone Router and calls the init method.\nThrows error if options does not contain eventBus and places.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Titan.View": {
            "name": "Titan.View",
            "shortname": "Titan.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Mock",
            "namespace": "",
            "file": "src\\Titan\\View.js",
            "line": 1,
            "description": "Extends Backbone.View.\nSee: [http://backbonejs.org/#View](http://backbonejs.org/#View)"
        },
        "Titan.utils": {
            "name": "Titan.utils",
            "shortname": "Titan.utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Titan",
            "namespace": "",
            "file": "src\\Titan\\utils.js",
            "line": 1,
            "description": "A set of utility functions exposed by Titan"
        }
    },
    "classitems": [
        {
            "file": "src\\Titan\\Application.js",
            "line": 24,
            "description": "Creates a new Router and MainController with the EventBus, places and container for the application, and\nbegins tracking changes to the route.",
            "itemtype": "method",
            "name": "start",
            "class": "Titan.Application",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Backbone.History.fix.js",
            "line": 1,
            "params": [
                {
                    "name": "fragmentOverride",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Titan.Collection",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Element.js",
            "line": 14,
            "description": "Appends a specified Widget to the container(s)",
            "itemtype": "method",
            "name": "addWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "The View to be added to the Element",
                    "type": "Titan.View"
                }
            ],
            "class": "Titan.Element",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Element.js",
            "line": 24,
            "description": "Detaches all the children from the container(s) and appends a specified Widget to the container(s)",
            "itemtype": "method",
            "name": "setWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "The View to be set as the sole content of the Element",
                    "type": "Titan.View"
                }
            ],
            "class": "Titan.Element",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\MainController.js",
            "line": 25,
            "description": "Handles a change in the route, and triggers the corresponding event specified in the module",
            "itemtype": "method",
            "name": "onPlaceChange",
            "params": [
                {
                    "name": "place",
                    "description": "The Place object we wish to change to.",
                    "type": "Titan.Place"
                }
            ],
            "class": "Titan.MainController",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Place.js",
            "line": 17,
            "description": "Method called when Place is initialised. Empty by default, it can be overridden to provide functionality",
            "itemtype": "method",
            "name": "init",
            "class": "Titan.Place",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Place.js",
            "line": 26,
            "description": "Gets the Presenter associated with the Place",
            "itemtype": "method",
            "name": "getPresenter",
            "return": {
                "description": "Presenter",
                "type": "Titan.Presenter"
            },
            "class": "Titan.Place",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Place.js",
            "line": 36,
            "description": "Gets the ID of the Presenter associated with the Place",
            "itemtype": "method",
            "name": "getPresenterId",
            "return": {
                "description": "UID of Presenter.",
                "type": "String"
            },
            "class": "Titan.Place",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Place.js",
            "line": 46,
            "description": "Gets the name of the function in the Presenter to be called when the Place is changed to.",
            "itemtype": "method",
            "name": "getFn",
            "return": {
                "description": "fn",
                "type": "String"
            },
            "class": "Titan.Place",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Presenter.js",
            "line": 19,
            "description": "Method called when Presenter is initialised. Empty by default, it can be overridden to provide functionality",
            "itemtype": "method",
            "name": "init",
            "class": "Titan.Presenter",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Presenter.js",
            "line": 28,
            "description": "Replaces the contents of the specified container with the current widget",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "$container",
                    "description": "The Element to place the widget within",
                    "type": "Titan.Element"
                }
            ],
            "class": "Titan.Presenter",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Presenter.js",
            "line": 43,
            "description": "Allows options to be specified both at instantiation and when extending.\nMerges both options and checks for special options in presenterOptions, and applies them directly to the\nPresenter object, then sets the merged options to this.options",
            "itemtype": "method",
            "name": "_configure",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Titan.Presenter",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Router.js",
            "line": 22,
            "description": "Method called when Router is initialised. Adds all the routes to the Router for each Place.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "places",
                    "description": "An array of all places within an application to be bound to the router.",
                    "type": "Array"
                }
            ],
            "class": "Titan.Router",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\Router.js",
            "line": 60,
            "description": "Starts listening to the hashchange event and starts dispatching routes.",
            "itemtype": "method",
            "name": "handleCurrentState",
            "class": "Titan.Router",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\View.js",
            "line": 11,
            "description": "Generates HTML markup based on a template and model",
            "itemtype": "method",
            "name": "template",
            "params": [
                {
                    "name": "model",
                    "description": "The model to be applied to the template",
                    "type": "Titan.Model"
                }
            ],
            "return": {
                "description": "The markup generated by the template",
                "type": "String"
            },
            "class": "Titan.View",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\View.js",
            "line": 22,
            "description": "Triggered when rendering the View. Checks if it the View is already rendered. If it is, it will remove all\nevents from the View, re-render it, and apply events back to it, otherwise it will render it normally.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "This View is returned to allow for chained methods.",
                "type": "View"
            },
            "class": "Titan.View",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\View.js",
            "line": 43,
            "description": "Method called when View is initialised. This should not be overridden. If additional functionality is\nrequired, you should override the init method instead. Renders the template and injects the corresponding\nstyles into the DOM. It also checks data-name for uniqueness, and data-widget in order to render a sub-view.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Titan.View",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\View.js",
            "line": 84,
            "description": "Method called after the View is initialised. Empty by default, it can be overridden to provide functionality",
            "itemtype": "method",
            "name": "init",
            "class": "Titan.View",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\View.js",
            "line": 93,
            "description": "Sets the Presenter for this View",
            "itemtype": "method",
            "name": "setPresenter",
            "params": [
                {
                    "name": "presenter",
                    "description": "The Presenter you wish to set for this View",
                    "type": "Titan.Presenter"
                }
            ],
            "return": {
                "description": "The View object",
                "type": "Object"
            },
            "class": "Titan.View",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\View.js",
            "line": 105,
            "description": "Gets the Presenter for this View",
            "itemtype": "method",
            "name": "getPresenter",
            "return": {
                "description": "The Presenter for the View",
                "type": "Titan.Presenter"
            },
            "class": "Titan.View",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\View.js",
            "line": 115,
            "description": "Gets the element for this View",
            "itemtype": "method",
            "name": "getElement",
            "return": {
                "description": "A jQuery wrapped set",
                "type": "Object"
            },
            "class": "Titan.View",
            "module": "Mock"
        },
        {
            "file": "src\\Titan\\core.js",
            "line": 8,
            "description": "Allows low level access to Titan in order to create extensions.\nSee {{tutorial url}} for instructions on how to create an extension.",
            "itemtype": "method",
            "name": "Titan.extension",
            "params": [
                {
                    "name": "fn",
                    "description": "An anonymous function that wraps extension logic. The first param in this function will give\n                     access to $, _, and Backbone. This function also has direct access to Titan.",
                    "type": "Function"
                }
            ],
            "class": "Titan.utils",
            "module": "Titan"
        },
        {
            "file": "src\\Titan\\globals.js",
            "line": 1,
            "description": "Remove libraries from global space",
            "class": "Titan.utils",
            "module": "Titan"
        },
        {
            "file": "src\\Titan\\utils.js",
            "line": 8,
            "description": "If args is a collection, it will be converted to an Array. If an index is specified, only items from that\nindex onwards will be in the returned Array.",
            "itemtype": "method",
            "name": "getListFromArguments",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Titan.utils",
            "module": "Titan"
        },
        {
            "file": "src\\Titan\\utils.js",
            "line": 22,
            "params": [
                {
                    "name": "dependencies",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "class": "Titan.utils",
            "module": "Titan"
        }
    ]
}